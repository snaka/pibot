service: pibot
frameworkVersion: '2'
provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  environment:
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
    BUCKET_NAME: ${self:resources.Resources.Posts.Properties.BucketName}
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
          Resource:
            - 'arn:aws:s3:::${self:resources.Resources.Posts.Properties.BucketName}/*'
        - Effect: Allow
          Action:
            - 's3:ListBucket'
          Resource:
            - 'arn:aws:s3:::${self:resources.Resources.Posts.Properties.BucketName}'
plugins:
  - serverless-offline
  - serverless-s3-local
functions:
  slack:
    handler: app.handler
    events:
      - http:
          path: incoming
          method: post
resources:
  Resources:
    Posts:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-posts-${opt:stage, 'dev'}
